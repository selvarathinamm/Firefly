# ============================================================
# üåê Server Configuration
# ============================================================
# Render automatically injects PORT ‚Äî fallback to 8080 locally
server.port=${PORT:8080}

# ============================================================
# üóÑÔ∏è Database Configuration (PostgreSQL on Neon)
# ============================================================
# ‚úÖ Works locally using your real Neon credentials
# ‚úÖ Works on Render using environment variables (DATABASE_URL, USERNAME, PASSWORD)

spring.datasource.url=${DATABASE_URL:jdbc:postgresql://ep-fragrant-sky-adlplwjk-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require}
spring.datasource.username=${DATABASE_USERNAME:neondb_owner}
spring.datasource.password=${DATABASE_PASSWORD:npg_pcCx4zoFgX2t}
spring.datasource.driver-class-name=org.postgresql.Driver

# ============================================================
# ‚öôÔ∏è JPA / Hibernate Settings
# ============================================================
# "update" creates or updates tables automatically ‚Äî great for local dev.
# On Render, this keeps schema in sync without dropping data.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# ============================================================
# ü™µ Logging
# ============================================================
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
